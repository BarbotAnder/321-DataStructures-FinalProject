import java.io.File;
import java.io.FileNotFoundException;
import java.lang.reflect.Array;
import java.util.ArrayList;
import java.util.Scanner;


public class readfileTestClass {

	
	public static void main(String[] args) {
		int letters = 0;
		boolean exit = false;
		int x = 0;
		char letter;
		boolean letterHadBefore = false;
		int sequenceSize = 5;
		File file = new File("testing.txt");
		try {
			Scanner scan = new Scanner(file);
			String nextLine = scan.nextLine();
			String currentLine;
			while(!nextLine.equals("ORIGIN")) { //searches for origin line	
				nextLine = scan.nextLine();
			}
			nextLine = scan.nextLine();
			while(!nextLine.equals("//")) {
				currentLine = nextLine;
				nextLine = scan.nextLine(); //lineByLine is on the very first line of sequences
				
				System.out.println(currentLine);
				System.out.println(nextLine);
				for(int i = 0; i<currentLine.length(); i++) {
					if(exit) { //this is for the very last case where the very last char will not be filled in
						letter = 'w'; //so it sets it to a not valid character so it won't go through
					}else {
					letter = currentLine.charAt(i);
					}
					if(letter == 'a' || letter == 't' || letter == 'g' || letter == 'c') {
						System.out.print(letter);
						letters++;
						int additions = 0;
						for(int j = 1; j<sequenceSize; j++) {
							if(currentLine.length()-1 >= (i+j)) {
								letter = currentLine.charAt(i+j+additions);
								if(letter == 'a' || letter == 't' || letter == 'g' || letter == 'c') {
									System.out.print(letter);
									letters++;
									if(letters == sequenceSize) {
										System.out.println("");
										letters = 0;
									}
								}else if(letter == ' ') {
									additions++;
									letter = currentLine.charAt(i+j+additions);
									System.out.print(letter);
									letters++;
									if(letters == sequenceSize) {
										System.out.println(""); //this is when you would add a long to the tree
										letters = 0;
									}
								}else if(letter == 'n') {
									if(letters != 0) {
										System.out.println("");
										letters = 0; 
									}
								}
							}else { //go into next line for last few spots of j
								if(!letterHadBefore) {
									x = 0;
								}
								if(!nextLine.equals("//")) {
									letter = nextLine.charAt(++x);
									while(letter != 'a' && letter != 't' && letter != 'c' && letter != 'g') {
										x++;
										letter = nextLine.charAt(x);
									}
									letterHadBefore = true;
									System.out.print(letter);
									letters++;
									if(letters == sequenceSize) {
										System.out.println(""); //this is when you would add a long to the tree
										letters = 0;
										letterHadBefore = false;
									}
								}else {
									exit = true;
								}
							}
						}
					}
				}	
			}
			boolean endOfFile = false;
			while(!nextLine.equals("ORIGIN") && !endOfFile) { //searches for origin line	
				if(scan.hasNextLine()) {
					nextLine = scan.nextLine();
				}else {
					endOfFile = true;
				}
			}
			if(endOfFile) {
				System.out.println("\nyou reached the end of the file");
			}
			scan.close();
			
		} catch (FileNotFoundException e) {
			e.printStackTrace();
		}
		
	}

}
